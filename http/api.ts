/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * Pontua√≠
 * The Pontua√≠ API experience :)
 * OpenAPI spec version: 1.0
 */
import { customFetch } from './mutator';
export interface CreateCustomerRequest { [key: string]: unknown }

export interface CreateTenantDto {
  /** Tenant name */
  name: string;
  /** Business CNPJ */
  cnpj: string;
  /** Tenant slug  */
  slug: string;
}

export interface CreateTenantResponse {
  /** The unique identifier of the tenant */
  id: string;
  /** The name of the tenant */
  name: string;
  /** The business slug of the tenant */
  slug: string;
  /** The CNPJ of the tenant */
  CNPJ: string;
  /** Indicates whether the tenant is active */
  active: boolean;
}

export interface GetMyTenantsResponse {
  /** The unique identifier of the tenant */
  id: string;
  /** The name of the tenant */
  name: string;
  /** The business slug of the tenant */
  slug: string;
  /** The CNPJ of the tenant */
  CNPJ: string;
  /** Indicates whether the tenant is active */
  active: boolean;
}

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


export const customerControllerCreate = (
  createCustomerRequest: CreateCustomerRequest,
  options?: SecondParameter<typeof customFetch>,) => {
  return customFetch<void>(
    {
      url: `/customers`, method: 'POST',
      headers: { 'Content-Type': 'application/json', },
      data: createCustomerRequest
    },
    options);
}

/**
 * @summary Create a new tenant
 */
export const tenantControllerCreate = (
  createTenantDto: CreateTenantDto,
  options?: SecondParameter<typeof customFetch>,) => {
  return customFetch<CreateTenantResponse>(
    {
      url: `/tenant`, method: 'POST',
      headers: { 'Content-Type': 'application/json', },
      data: createTenantDto
    },
    options);
}

/**
 * @summary Get my tenants
 */
export const tenantControllerGetMyTenants = (

  options?: SecondParameter<typeof customFetch>,) => {
  return customFetch<GetMyTenantsResponse[]>(
    {
      url: `/tenant`, method: 'GET'
    },
    options);
}

export type CustomerControllerCreateResult = NonNullable<Awaited<ReturnType<typeof customerControllerCreate>>>
export type TenantControllerCreateResult = NonNullable<Awaited<ReturnType<typeof tenantControllerCreate>>>
export type TenantControllerGetMyTenantsResult = NonNullable<Awaited<ReturnType<typeof tenantControllerGetMyTenants>>>
